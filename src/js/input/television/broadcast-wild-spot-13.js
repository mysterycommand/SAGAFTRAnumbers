// Generated by CoffeeScript 1.6.1
(function() {
  var define, log, root;

  root = this;

  log = root.log;

  define = root.define;

  define(['jquery', 'underscore', 'input/util/broadcastMarkets'], function($, _, broadcastMarkets) {
    var WildSpot13,
      _this = this;
    WildSpot13 = (function() {

      function WildSpot13() {
        var _this = this;
        this.onChange = function(event) {
          return WildSpot13.prototype.onChange.apply(_this, arguments);
        };
        this.label = "Wild Spot - 13 week cycle";
        this.html = "<fieldset>\n  It will be broadcast in the following markets:\n  <select name=\"markets\" id=\"markets\" multiple class=\"chzn-select\" data-placeholder=\"please choose all that apply...\">\n    <option value=\"-1\"></option>\n  </select>\n</fieldset>";
        this.$el = $(this.html);
        this.$markets = this.$el.find('#markets');
        this.el = this.$el[0];
        this.setupOptions();
        this.$el.on('change', '#markets', this.onChange);
      }

      WildSpot13.prototype.setupOptions = function() {
        var html;
        this.selectedIndex = -1;
        this.selectedItem = null;
        this.options = broadcastMarkets;
        html = '';
        _.each(this.options, function(el, i) {
          return html += "<option value=\"" + i + "\" data-value=\"" + el.value + "\"" + (el.value.toString().indexOf('mailto') > -1 ? ' class="mailto"' : '') + ">" + el.label + "</option>";
        });
        return this.$el.find('select').append(html);
      };

      WildSpot13.prototype.getSelectedItem = function() {
        return this.selectedItem;
      };

      WildSpot13.prototype.onChange = function(event) {
        var mailto, val;
        val = this.$markets.val();
        this.selectedIndex = (val != null ? val.pop() : void 0) || -1;
        this.selectedItem = this.selectedIndex !== -1 ? this.options[this.selectedIndex] : null;
        if (!this.selectedItem || this.selectedItem === null) {
          return;
        }
        if (!isNaN(parseInt(this.selectedItem.value, 10))) {
          return;
        }
        if (this.selectedItem.value.indexOf('mailto') === -1) {
          return;
        }
        mailto = window.open(this.selectedItem.value, 'mailto');
        if (mailto && mailto.open && !mailto.closed) {
          mailto.close();
        }
        this.$markets.val(val).trigger('change').trigger('liszt:updated');
      };

      return WildSpot13;

    })();
    return WildSpot13;
  });

}).call(this);
